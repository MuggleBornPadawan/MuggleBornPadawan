MIT/GNU Scheme running under GNU/Linux
Type `^C' (control-C) followed by `H' to obtain information about interrupts.

Copyright (C) 2022 Massachusetts Institute of Technology
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Image saved on Wednesday January 11, 2023 at 11:12:18 PM
  Release 12.1 || SF || LIAR/x86-64
;Loading "hello_world.scm"...Hello, mit-scheme world!
;... done

1 ]=> 
Interrupt option (? for help): 

^B: Enter a breakpoint loop.
^C: Goto to top level read-eval-print (REP) loop.
^L: Clear the screen.
^U: Up to previous (lower numbered) REP loop.
^X: Abort to current REP loop.
D: Debugging: change interpreter flags.
E: Examine memory location.
H: Print simple information on interrupts.
I: Ignore interrupt request.
Q: Quit instantly, killing Scheme.
R: Hard reset, possibly killing Scheme in the process.
T: Stack trace.
Z: Quit instantly, suspending Scheme.

Interrupt option (? for help): 

^B: Enter a breakpoint loop.
^C: Goto to top level read-eval-print (REP) loop.
^L: Clear the screen.
^U: Up to previous (lower numbered) REP loop.
^X: Abort to current REP loop.
D: Debugging: change interpreter flags.
E: Examine memory location.
H: Print simple information on interrupts.
I: Ignore interrupt request.
Q: Quit instantly, killing Scheme.
R: Hard reset, possibly killing Scheme in the process.
T: Stack trace.
Z: Quit instantly, suspending Scheme.

Interrupt option (? for help): 

^B: Enter a breakpoint loop.
^C: Goto to top level read-eval-print (REP) loop.
^L: Clear the screen.
^U: Up to previous (lower numbered) REP loop.
^X: Abort to current REP loop.
D: Debugging: change interpreter flags.
E: Examine memory location.
H: Print simple information on interrupts.
I: Ignore interrupt request.
Q: Quit instantly, killing Scheme.
R: Hard reset, possibly killing Scheme in the process.
T: Stack trace.
Z: Quit instantly, suspending Scheme.

Interrupt option (? for help): 

^B: Enter a breakpoint loop.
^C: Goto to top level read-eval-print (REP) loop.
^L: Clear the screen.
^U: Up to previous (lower numbered) REP loop.
^X: Abort to current REP loop.
D: Debugging: change interpreter flags.
E: Examine memory location.
H: Print simple information on interrupts.
I: Ignore interrupt request.
Q: Quit instantly, killing Scheme.
R: Hard reset, possibly killing Scheme in the process.
T: Stack trace.
Z: Quit instantly, suspending Scheme.

Interrupt option (? for help): 

^B: Enter a breakpoint loop.
^C: Goto to top level read-eval-print (REP) loop.
^L: Clear the screen.
^U: Up to previous (lower numbered) REP loop.
^X: Abort to current REP loop.
D: Debugging: change interpreter flags.
E: Examine memory location.
H: Print simple information on interrupts.
I: Ignore interrupt request.
Q: Quit instantly, killing Scheme.
R: Hard reset, possibly killing Scheme in the process.
T: Stack trace.
Z: Quit instantly, suspending Scheme.

Interrupt option (? for help): 

^B: Enter a breakpoint loop.
^C: Goto to top level read-eval-print (REP) loop.
^L: Clear the screen.
^U: Up to previous (lower numbered) REP loop.
^X: Abort to current REP loop.
D: Debugging: change interpreter flags.
E: Examine memory location.
H: Print simple information on interrupts.
I: Ignore interrupt request.
Q: Quit instantly, killing Scheme.
R: Hard reset, possibly killing Scheme in the process.
T: Stack trace.
Z: Quit instantly, suspending Scheme.

Interrupt option (? for help): 

^B: Enter a breakpoint loop.
^C: Goto to top level read-eval-print (REP) loop.
^L: Clear the screen.
^U: Up to previous (lower numbered) REP loop.
^X: Abort to current REP loop.
D: Debugging: change interpreter flags.
E: Examine memory location.
H: Print simple information on interrupts.
I: Ignore interrupt request.
Q: Quit instantly, killing Scheme.
R: Hard reset, possibly killing Scheme in the process.
T: Stack trace.
Z: Quit instantly, suspending Scheme.

Interrupt option (? for help): 

^B: Enter a breakpoint loop.
^C: Goto to top level read-eval-print (REP) loop.
^L: Clear the screen.
^U: Up to previous (lower numbered) REP loop.
^X: Abort to current REP loop.
D: Debugging: change interpreter flags.
E: Examine memory location.
H: Print simple information on interrupts.
I: Ignore interrupt request.
Q: Quit instantly, killing Scheme.
R: Hard reset, possibly killing Scheme in the process.
T: Stack trace.
Z: Quit instantly, suspending Scheme.

Interrupt option (? for help): 

;Unbound variable: fas
;To continue, call RESTART with an option number:
; (RESTART 3) => Specify a value to use instead of fas.
; (RESTART 2) => Define fas to a given value.
; (RESTART 1) => Return to read-eval-print level 1.

2 error> 
..#]^@^@^@ NO CARRIER

#+title: linux commands
* linux
** security
- firewall - ufw?
- ssh - fail2b
- iptables 
- apparmour
- selinux
- sudo - restrict root access to users
- ssh hardening
- audit logging
- users / groups / owners - archaic
- permissions
- zero trust architecture - lease possible permissions at every level - user based and device based (not netwrok based)
** Command-Line Cheat Sheet
*** System
|---------------+---------------------------------------|
| Command       | Description                           |
|---------------+---------------------------------------|
| uname -a      | Display Linux system information      |
| uname -r      | Display kernel release information    |
| uptime        | Shows the current uptime              |
| hostname      | Shows the system's host name          |
| hostname -i   | Displays the IP address of the system |
| last reboot   | Shows system reboot history           |
| date          | Shows the current date and time       |
| cal           | Shows the current month's calendar    |
| w             | Displays who is online                |
| whoami        | Displays who you are logged in as     |
| finger <user> | Displays information about the user   |
|---------------+---------------------------------------|
*** Hardware
|-----------------------+---------------------------------------------|
| Command               | Description                                 |
|-----------------------+---------------------------------------------|
| dmesg                 | Displays bootup messages                    |
| cat /proc/cpuinfo     | Displays CPU model information              |
| cat /proc/meminfo     | Displays memory information                 |
| cat /proc/version     | Displays the kernel version                 |
| lshw                  | Displays a list of hardware                 |
| lsblk                 | Displays block devices related information  |
| lspci -tv             | Displays PCI devices in a tree-like diagram |
| lsusb -tv             | Displays USB devices in a tree-like diagram |
| hdparm -i /dev/sda    | Displays information about a disk drive     |
| badblocks -s /dev/sda | Test for unreadable blocks on a disk        |
|-----------------------+---------------------------------------------|
*** Users
|------------------------------------+------------------------------------------------------|
| Command                            | Description                                          |
|------------------------------------+------------------------------------------------------|
| id                                 | Displays the user and group ids of your current user |
| last                               | Displays the last logins on the system               |
| who                                | Shows who is logged on to the system                 |
| groupadd "admin"                   | Adds the group "admin"                               |
| useradd -c "Name" -g admin -m user | Creates a user                                       |
| userdel user                       | Deletes a user                                       |
| usermod -aG sales user             | Add a user to a group                                |
|------------------------------------+------------------------------------------------------|
*** File Commands
|-----------------------------------+--------------------------------------------------------|
| Command                           | Description                                            |
|-----------------------------------+--------------------------------------------------------|
| ls -al                            | List files - including hidden files, with details      |
| pwd                               | Shows the current directory path                       |
| mkdir <directory_name>            | Creates a directory                                    |
| rm <file_name>                    | Removes a file                                         |
| rm -r <directory_name>            | Removes a directory and its contents recursively       |
| rm -f <file_name>                 | Force removes a file                                   |
| rm -rf <directory_name>           | Force removes a directory and its contents recursively |
| cp <file1> <file2>                | Creates a copy of a file                               |
| cp -r <dir1> <dir2>               | Creates a copy of a directory                          |
| mv <file1> <file2>                | Renames or moves a file to a directory                 |
| ln -s /path/to/<file_name> <link> | Creates a symbolic link to the file name               |
| touch <file>                      | Creates a new empty file                               |
| cat > <file>                      | Writes standard input into a file                      |
| more <file>                       | Displays the contents of a file                        |
| head -n 10 <file>                 | Displays the first 10 lines of a file                  |
| tail -n 10 <file>                 | Displays the last 10 lines of a file                   |
| gpg -c <file>                     | Encrypts a file                                        |
| gpg <file>.gpg                    | Decrypts a file                                        |
|-----------------------------------+--------------------------------------------------------|
*** Process Related
|-------------------+---------------------------------------------------|
| Command           | Description                                       |
|-------------------+---------------------------------------------------|
| ps                | Displays currently active processes               |
| ps aux            | Displays all the running processes                |
| top               | Displays all running processes in real-time       |
| kill <pid>        | Kills the process with the given process ID       |
| killall <proc>    | Kills all processes with the given name           |
| pkill <proc_name> | Kills process by name                             |
| bg                | Resumes a stopped process in the background       |
| fg                | Resumes a process and brings it to the foreground |
| fg <n>            | Brings job number n to the foreground             |
| lsof              | Lists files that are open by processes            |
| renice 19 <pid>   | Makes a process run with very low priority        |
| pgrep             | Finds the process ID of a running program by name |
| pstree            | Visualizes the processes of the system in a tree  |
|-------------------+---------------------------------------------------|
*** File Permissions
|--------------------------------+-----------------------------------------------------------------|
| Command                        | Description                                                     |
|--------------------------------+-----------------------------------------------------------------|
| chmod 777 /path/to/file        | Change file permissions to owner, group, and everyone can rwx   |
| chmod 755 /path/to/file        | Set permission to rwx for owner, and r-x for group and everyone |
| chmod u+x <file>               | Set execute permission for the owner                            |
| chown <owner>:<group> <file>   | Change ownership of the file                                    |
| chown -R <owner>:<group> <dir> | Change ownership of the directory recursively                   |
|--------------------------------+-----------------------------------------------------------------|
*** Network
|----------------------------------------+----------------------------------------------------------------|
| Command                                | Description                                                    |
|----------------------------------------+----------------------------------------------------------------|
| ip addr show                           | Displays IP addresses and all the network interfaces           |
| ip address add 192.168.0.1/24 dev eth0 | Assign an IP address to a network interface                    |
| dig <domain>                           | Displays DNS information about a domain                        |
| host <domain>                          | Displays IP address of a domain and vice-versa                 |
| hostname -i                            | Displays local IP address                                      |
| wget <file>                            | Downloads a file from an online source                         |
| netstat -pnltu                         | Displays all active listening ports and services on the server |
|----------------------------------------+----------------------------------------------------------------|
*** Compression/Archives
|-----------------------+--------------------------------------------------|
| Command               | Description                                      |
|-----------------------+--------------------------------------------------|
| tar cf home.tar /home | Creates a tar file named "home.tar" from "/home" |
| tar xf <file.tar>     | Extracts the files from a tar file               |
| tar czf <file.tar.gz> | Creates a tar file with Gzip compression         |
|-----------------------+--------------------------------------------------|
*** Install Packages
|-------------------+--------------------------|
| Command           | Description              |
|-------------------+--------------------------|
| rpm -i <pkg.rpm>  | Install an rpm package   |
| rpm -e <pkg_name> | Uninstall an rpm package |
|-------------------+--------------------------|
*** Install Source (Compilation)
|--------------+------------------------|
| Command      | Description            |
|--------------+------------------------|
| ./configure  | Configures the package |
| make         | Compiles the package   |
| make install | Installs the program   |
|--------------+------------------------|
*** Search
|-----------------------------+-------------------------------------------------------|
| Command                     | Description                                           |
|-----------------------------+-------------------------------------------------------|
| grep <pattern> <files>      | Search for a given pattern in a file                  |
| grep -r <pattern> <dir>     | Search recursively for a pattern in a given directory |
| find /dir/ -name <filename> | Find all the files with a given name                  |
| find / -size +100M          | Find files greater than 100MB in the home folder      |
|-----------------------------+-------------------------------------------------------|
*** Login
|-----------------------------+-----------------------------------------------------|
| Command                     | Description                                         |
|-----------------------------+-----------------------------------------------------|
| ssh <user>@<host>           | Securely connects to the host as the specified user |
| ssh -p <port> <user>@<host> | Securely connect to host on the specified port      |
| telnet <host>               | Connects to the system using telnet port            |
|-----------------------------+-----------------------------------------------------|
*** File Transfer
|---------------------------------+----------------------------------------------------|
| Command                         | Description                                        |
|---------------------------------+----------------------------------------------------|
| scp <file.txt> <server>:/tmp    | Securely copy a file to a server in /tmp directory |
| rsync -a /local/dir /remote/dir | Synchronize the contents of two directories        |
|---------------------------------+----------------------------------------------------|
*** Disk Usage
|----------+---------------------------------------------------------|
| Command  | Description                                             |
|----------+---------------------------------------------------------|
| df -h    | Displays free space on mounted systems (human readable) |
| df -i    | Displays free inodes on mounted systems                 |
| fdisk -l | Displays disk partitions, sizes and types               |
| du -sh   | Displays the disk space a directory is using            |
| findmnt  | Displays target mount point for all filesystems         |
|----------+---------------------------------------------------------|
*** Directory Traversal
|----------+--------------------------------------------------------|
| Command  | Description                                            |
|----------+--------------------------------------------------------|
| cd ..    | Moves one directory up in the directory tree structure |
| cd       | Changes directory to the home directory                |
| cd /test | Change directory to the /test directory                |
|----------+--------------------------------------------------------|
** cURL Commands
*** Syntax & Help
|---------------------+----------------------------------------------------------|
| Command             | Description                                              |
|---------------------+----------------------------------------------------------|
| curl [params] [URL] | Base command syntax                                      |
| curl --help         | Display the command usage and lists most common options  |
| curl --help all     | Display the command usage and list all available options |
|---------------------+----------------------------------------------------------|
*** Basic Operations
|----------------------------+------------------|
| Command                    | Description      |
|----------------------------+------------------|
| curl http://example.com    | Fetch a URL      |
| curl -o /path/to/file.zip  | Download a file  |
| curl -L http://example.com | Follow redirects |
|----------------------------+------------------|
*** Data Transfer
|-------------------------------------------------------------------------+----------------|
| Command                                                                 | Description    |
|-------------------------------------------------------------------------+----------------|
| curl -d "key1=value1&key2=value2" http://example.com/post_endpoint      | Post Data      |
| curl -d '{"key":"value"}' -H "Content-Type: application/json" <api_url> | Post JSON Data |
| curl -F "file=@/path/to/file" http://example.com/upload                 | Upload a file  |
|-------------------------------------------------------------------------+----------------|
*** Authentication & Headers
|------------------------------------------------------------+---------------------------|
| Command                                                    | Description               |
|------------------------------------------------------------+---------------------------|
| curl -u <username>:<password> http://example.com           | HTTP Basic Authentication |
| curl -H "Authorization: Bearer <TOKEN>" http://example.com | Add Headers               |
|------------------------------------------------------------+---------------------------|
*** Other Useful Options
|-----------------------------------------------------+--------------------------|
| Command                                             | Description              |
|-----------------------------------------------------+--------------------------|
| curl --limit-rate 3M -O http://example.com/file.zip | Limit rate (e.g., 3MB/s) |
| curl -C - -O http://example.com/file.zip            | Resume Broken Download   |
| curl -x http://proxyserver:port http://example.com  | Use a Proxy              |
|-----------------------------------------------------+--------------------------|
*** Debugging & Info
|----------------------------+--------------------------|
| Command                    | Description              |
|----------------------------+--------------------------|
| curl -v http://example.com | Verbose Mode             |
| curl -i http://example.com | Retrieve Only Headers    |
| curl --version             | Curl Version & Protocols |
|----------------------------+--------------------------|
*** SSL (Secure Socket Layer)
|--------------------------------------------+-----------------------------------|
| Command                                    | Description                       |
|--------------------------------------------+-----------------------------------|
| curl -k https://example.com                | Skip SSL Certificate Verification |
| curl --cert mycert.pem https://example.com | Use SSL Certificate               |
|--------------------------------------------+-----------------------------------|
*** Common Options
|--------------------------+-------------------------------------------------|
| Option                   | Description                                     |
|--------------------------+-------------------------------------------------|
| -d, --data <data>        | HTTP POST data                                  |
| -F, --fail               | Fail fast with no output on HTTP errors         |
| -h, --help <category>    | Get help for commands                           |
| -i, --include            | Include protocol response headers in the output |
| -o, --output <file>      | Write to file instead of stdout                 |
| -O, --remote-name        | Write output to a file named as the remote file |
| -s, --silent             | Silent mode                                     |
| -T, --upload-file <file> | Transfer local FILE to destination              |
| <user:password>          | Server user and password                        |
| -A, --user-agent <name>  | Send User-Agent <name> to server                |
|--------------------------+-------------------------------------------------|
# ---
# Common mistakes for beginners:
# 1. Using `rm -rf` carelessly. Double-check the path before executing, as this command is irreversible.
# 2. Using `chmod 777`. This gives everyone read, write, and execute permissions, which can be a major security risk. Use more specific permissions whenever possible.
# 3. Forgetting quotes around cURL data payloads (`-d`) can lead to shell interpretation errors, especially with characters like `&` or `{}`.
# ---
** uncomplicated firewall (ufw)
*** deny by default and allow by exception
- port 20 and 21 - ftp
- port 22 - secure shell
- port 23 - telnet
- port 25 - smtp (simple mail transfer protocol)
- port 53 - domain name system
- port 67 & 68 - dynamic host configuration protocol 
- port 80 - http
- port 110 - pop3 (post office protocol version3)
- port 123 - network time protocol
- port 137, 138, 139 - NetBIOS, SMB
- port 143 - imap (internet message access protocol)
- port 443 - https
- port 445 - server message block (smb)
*** internal ports 
- port 5432 - postgresql
- application layer or ssh access recommended
- vpn access or ssl / tls or restricted firewall methods are not so secure
- DO NOT EXPOSE directly
*** general
- sudo ufw app list - script to be written to get the corresponding ports and display it in "security" alias
  
** open source options
|----------------------------+------------------------|
| open source                | propr'y                |
|----------------------------+------------------------|
| thunderbird (mozilla)      | microsoft outlook      |
| godot                      | unity                  |
| bittorrent (qb)            | mutorrent              |
| virtualbox (oracle)        | vmware                 |
| etherpad                   | google docs            |
| musescore                  | sibelius - sheet music |
| logseq                     | obsidian               |
| okular                     | adobe acrobat          |
| clamav                     | nortan antivirus       |
| krita                      | coral painter          |
| *anytype                   | notion                 |
| syncthing                  | dropbox                |
| firefox                    | microsoft ie           |
| vlc media player           | windows media player   |
| OBS studio                 | camtasia               |
| 7-zip                      | winzip                 |
| gimp                       | adobe photoshop        |
| libreoffice                | microsoft office       |
| wordpress                  | commercial cms         |
| php                        | asp .net               |
| git                        | perforce               |
| blender                    | autodesk maya          |
| audacity - audio           | adobe audition         |
| signal - privacy           | whatsapp               |
| trello                     | jira                   |
| nextcloud                  | google drive           |
| keepass                    | lastpass               |
| shotcut - editing software | adobe premiere         |
| postgresql                 | oracle db              |
| inkscape                   | adobe illustrator      |
| jitsi meet                 | zoom                   |
| freeCAD                    | autoCAD                |
| Nginx                      | Apache HTTP server     |
|----------------------------+------------------------|

** general intro
zoxide, fd, tmux, gh cli, fzf, ripgrep, stow, jq, password-store, doppler cli
linux is a kernel which helps you interact with hardware and software
- shell - command line interface 
- terminal 
- file system directory 
- root (super user)
- permissions (rwx)
- process (pid)
- init - systemd
- daemons - sshd or cron
- pkg mgrs
- kernel modules (hardware drivers)
- shell scripts
- environment variables ($path)
- pipes
- redirection
- standard streams (stdin stdout stderr)
- symbolic links (shortcuts)
- hard links (alternate names)
- mounting (storage)
- swap space
- cron jobs (schedule)
- system logs (/var/log)
- ping, ss, ip
- ssh
- sudo
- system monitoring - htop, top
*- signals - sigkill, sigterm
*- file descriptors - fd table, file table, inode table, hd data blocks
- run levels or targes (single user, multiple user, graphic users)
- tmux
*- storage mgmnt - fdisk, parted, lvm (logical volume manager)
*- file systems - ext4, xfs, btrfs
- disk usage - df (overall space), du (directory sizes)
*- security - firewalls (iptables, ufw), SElinux, apparmor
- authentication - PAM - pluggable authentication modules
- /proc - ps aux virtual 
- /dev - hardware and software 
- /dmesg log - kernel and system messages (hardware issues)
- compilation - make, gcc - directly from source code 
- isolated applications - dockers, podman - package apps with their dependences 
- virtulaization - kvm, qemu (entire os can be run inside os)
- file sharing (nfs, samba)
- transfer data (scp, rsync)
- host services (web servers - apache, nginx)
- monitoring networks - wireshark, tcp
- kernel headers (compliing hardware)
- package formats - .deb, ,rpm
- flatpak, snap, appimage - install and run across many distros
- systemd services - start, stop, enable, disable - background processess
- display servers - x11, wayland
- desktop environment - kde, gnome, xfce,
- aliases
- bash functions (bashrc?)
- everything is a file (/sys / - hardware, processes and sockets)
- initramfs - loaded at boot time - kernel for hardware l
** linux -> fedora + darwin (macOS)
- dnf - fedora
- brew - macOS
- yum - aws, Red Hat Enterprise Linux (RHEL), CentOS, Fedora
- apk - alpine
- apt - debian, ubuntu, and derivatives like linux mint
- dpkg - debian
- rpm - rhel, centos, fedora
- pacman - arch, manjaro
- zypper, YaST - suse
- emerge - gentoo
- snap - ubuntu
- flatpak - various distributions
** advanced commands
- tmux tmux-resurrect tmux-continuum
- pipeline (|) vs xargs (multifile processing) vs parallel (concurrency) 
- grep (filter rows) vs sed (streaming editor) vs awk (script based processing) 
- rsync (delta transfer over remote + compression) vs cp (full local transfer) vs scp (full remote transfer); other options: aws s3 sync, gsutil rsync, git (lfs) 
- bat as batcat (pretty print, navigate) vs cat
- fd vs find
- ncdu vs du
- htop vs top
- column - csv
- watch - monitor any command in real time
- pv - progress live bar for long running commands
  - copy file with progress → pv bigfile.iso > /mnt/usb/bigfile.iso
  - monitor backup creation → tar cf - /home | pv | gzip > backup.tar.gz
- tldr
- eza vs ls
- tree  
- rename many files at once
  - change all .txt files to .log → rename 's/\.txt$/\.log/' *.txt
  - convert all filenames to lowercase → rename 'y/A-Z/a-z/' *
  - add a prefix to JPG files → rename 's/^/photo_/' *.jpg
- autostop a command after some time
  - stop after 10 seconds → timeout 10s ping google.com
  - stop after 1 hour → timeout 1 hour rsync -av /source/ /destination/
- randomize or pick something from a list
  - shuffle all lines in a file → shuf file.txt
  - pick one random line → shuf -n 1 file.txt
  - generate random 12-character password → shuf -zer -n12 {A..Z} {a..z} {0..9} | tr -d '\0'
- compare two files and spot differences
  - compare both files → comm file1.txt file2.txt
  - show only common lines → comm -12 file1.txt file2.txt
- read file contents in reverse
  - view file in reverse → tac /var/log/syslog
  - save reversed content → tac file.txt > reversed.txt
- add line numbers to a File Instantly
  - add numbers to all lines → nl file.txt
  - skip blank lines → nl -ba file.txt
** temp
|--------------------------+-----------------------------------------------------------|
| shell cmd                | particulars                                               |
|--------------------------+-----------------------------------------------------------|
| !!                       | rerun previous command                                    |
| !$                       | show argument                                             |
| &&                       | chaining - run second cmd only if first one is error free |
| ;                        | chaining - execute all                                    |
| double vertical pipeline | chaining - run second cmd if first fails                  |
| jobs                     | list suspended processes                                  |
| fg %n                    | bring nth process status to running                       |
| Ctrl R                   | reverse search (similar to history)                       |
|--------------------------+-----------------------------------------------------------|

** tips & tricks
|---------------------------------+--------------------------+-------------------------------------------------------|
| old command                     | new command              | details                                               |
|---------------------------------+--------------------------+-------------------------------------------------------|
| ls -a                           | ls -A                    | hides current (.) and parent (..) directory shortcuts |
| find . -exec grep 'hello' {} \; | grep -r 'hello'          | built in support for recursive search                 |
| mkdir blog/2024/09/16           | mkdir -p blog/2024/09/16 | make deep directories with one command                |
|                                 | cd -                     | toggle between recent directories                     |
| cp -R docs backup-docs          | cp -a docs backup-docs   | copy directories with maximum fidelity                |
|                                 | tar xvf archive.tar.gz   | extract tar.gz files with a single command            |
| cat filename.ext                | cat -sb filename.ext     | inspect files quickly                                 |
|                                 |                          |                                                       |
|---------------------------------+--------------------------+-------------------------------------------------------|

** zsh
- nano ~/.zshrc
- export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/Apple/usr/bin:/"
- source ~/.zshrc
** port
- lsof -i -P -n | grep LISTEN
- netstat -an | grep LISTEN
** packages
- sudo dnf -y git gs python3 neofetch top htop curl emacs
** chmod / chown
- numeric octal mode: read (r|4), write (w|2) and execute (x|1)
- symbolic mode: user (owner) u, group g, others o, all a
- permission operators: add (+), remove (-), set exact (=)
- commonly used
  - 777: Full permissions for everyone (read, write, execute).
  - 755: Full permissions for the owner, and read and execute permissions for group and others.
  - 644: Read and write permissions for the owner, and read-only for group and others.
  - 600: Read and write permissions for the owner, no permissions for group and others.
  - 400: Read-only for the owner, no permissions for group and others.
  - chmod u+x file: Add execute permission for the owner.
  - chmod g-w file: Remove write permission for the group.
  - chmod o=r file: Set read-only permission for others.
  - chmod a+rw file: Add read and write permissions for everyone.
** file and directory commands
- ls
- ls -l  # detailed listing
- ls -a  # shows hidden files
- cd /path/to/directory  # navigate to a directory
- cd ~                   # go to home directory
- cd ..                  # move one directory up
- pwd
- mkdir new_directory
- rm filename          # delete a file
- rm -r directoryname  # delete a directory and its contents
- cp source_file destination_directory
- cp -r source_directory destination_directory  # copy directory recursively
- mv old_name new_name  # rename a file or directory
- mv file_name /path/to/destination  # move to another directory
** file viewing and editing commands
- cat file_name
- cat file1.txt file2.txt
- cat file1.txt file2.txt > newfile.txt # concat to new file 
- cat file1.txt file2.txt >> existingfile.txt # concat and append to new file
- cat file1.txt file2.txt | grep "search_term" # search for search_term in the combined output of file1.txt and file2.txt
- cat > newfile.txt # create new file; type content and press Ctrl+D
- cat >> existingfile.txt # append to existing file
- cat -n file_name # numbering lines
- cat -v file_name # display non printable chars (tab / line breaks)
- cat -s file_name # suppress multiple blank lines
- cat -E file_name # end of line markers
- cat file_name | less # display page by page
- emacs file_name  # opens the file for editing
- nano file_name  # opens the file for editing
- less file_name
- head file_name
- tail file_name
** system information commands
- uname
- uname -r
- df -h  # disk space; human-readable format
- du -h  # usage of files and directories; human-readable format
- top
- sudo dnf install htop
- htop
- free -h
** package management with dnf
- sudo dnf update
- sudo dnf upgrade
- sudo dnf install package_name
- sudo dnf remove package_name
- sudo dnf search package_name
** user and permission commands
- chmod 755 file_name  # Give owner full access, others read and execute
- sudo chown new_owner:new_group file_name
** network commands
- whoami
- uname
- ping google.com
- ifconfig  # might need to install net-tools
- ip addr 
- curl ifconfig.me
- ip addr
- curl https://example.com
- ssh #shell
- wget #download files from internet; same as curl 
** searching and finding files
- find /path/to/search -name "file_name"
- grep "search_term" file_name 
- `grep "search_term" file.txt` - Search for "search_term" in file.txt
- `grep -i "search_term" file.txt` - Search for "search_term" in file.txt, ignoring case
- `grep -v "search_term" file.txt` - Search for lines that do not contain "search_term" in file.txt
- `grep -c "search_term" file.txt` - Count the number of lines containing "search_term" in file.txt
- `grep -n "search_term" file.txt` - Search for "search_term" in file.txt and display line numbers
- `grep -l "search_term" file.txt` - Search for "search_term" in file.txt and display only file names with matches
- `grep -r "search_term" directory/` - Recursively search for "search_term" in directory and subdirectories
- `grep -E "search_term1|search_term2" file.txt` - Search for lines containing either "search_term1" or "search_term2" in file.txt
- `grep -P "search_term" file.txt` - Search for "search_term" in file.txt using Perl-compatible regular expressions
- `grep -f search_terms.txt file.txt` - Search for multiple search terms in file.txt, one per line in search_terms.txt
- `ls -l | grep ".txt"` - Search for files with the ".txt" extension in the current directory
- `grep "search_term" file1.txt file2.txt` - Search for "search_term" in multiple files
- `grep -Pzo "pattern" file` - Search for a pattern using Perl-compatible regular expressions, with zero-separated output
- `grep -rno "pattern" directory` - Recursively search for a pattern in a directory, showing line numbers and file names
- `grep -f patterns.txt file` - Search for multiple patterns in a file, with patterns defined in patterns.txt
- `grep -E "pattern1|pattern2" file` - Search for lines containing either pattern1 or pattern2
- `grep -v -E "pattern1|pattern2" file` - Search for lines not containing either pattern1 or pattern2
- `grep -oP "pattern" file` - Print only the matched text, using Perl-compatible regular expressions
- `grep -A 2 -B 1 "pattern" file` - Print 2 lines after and 1 line before each match
- `grep -m 5 "pattern" file` - Stop after finding 5 matches
- `grep --color=auto "pattern" file` - Highlight matched text in color
- `grep -R "pattern" directory` - Recursively search for a pattern in a directory, without following symlinks
- `grep -w "pattern" file` - Match whole words only
- `grep -x "pattern" file` - Match entire lines only
** shell scripting
|-------------+--------+---------+------------------------------------------------------|
| command     | events | options | comments                                             |
|-------------+--------+---------+------------------------------------------------------|
| echo        |        | -e      | text formatting                                      |
| sleep       |        | 5       | delay 5 seconds                                      |
| read        |        | -p      | press enter / read input                             |
| usleep      |        | 500000  | 0.5 seconds (microseconds)                           |
| wait        |        | $!      | wait for background processes                        |
| inotifywait |        |         | monitor file system (subkernel level)                |
| socat       |        |         | bidirectional data transfer - network event triggers |
|             |        |         |                                                      |
|-------------+--------+---------+------------------------------------------------------|

*** notes
- inotifywait is a linux command-line tool that monitors file system events using the inotify kernel subsystem. It allows you to track events like file access, modification, creation, deletion, and movement. key options include -m (monitor continuously), -r (recursive monitoring), -e (specify events), -q (quiet output), --timefmt (customize time format), and --format (customize output format). You can use it to automate tasks, monitor logs, trigger actions on file changes, and build file synchronization tools by outputting event details to standard output, which can then be piped to other commands for processing.
- ```socat``` is a versatile command-line tool for bidirectional data transfer between various address types, including TCP/UDP sockets, Unix domain sockets, files, serial lines, and SSL/TLS connections. It enables network relaying, serial communication, proxying, data transfer, debugging, and secure communication, offering greater flexibility and power than ```netcat```.
  
** others
- clear
- history
- ln #shortcut
- hostname 
- alias ll="ls -la"  # example to list files with details and hidden files
** to be checked
- neofetch
- path
- top, free, iostat, htop, vmstat, or iftop
- dmesg
- ps
- df
- du
- tail
- systemctl
- lsof
- journalctl
- strace
- free 
- lscpu
** getting help
- man command_name
- command_name -h #?
** do not run these commands ever
- rm -rf / | deletes everything from root forever
- dd - make copies - https://opensource.com/article/18/7/how-use-dd-linux
- :(){ :|:& };: - bash fork() bomb. Prevention steps:
  - type -a ulimit
  - ulimit -u
  - ulimit -a
  - ulimit -S -u 5000
  - man ulimit
  - help ulimit
- chmod -R 777 / | permission pulverizer
- mkfs.ext4 /dev/sda | disk formatter
